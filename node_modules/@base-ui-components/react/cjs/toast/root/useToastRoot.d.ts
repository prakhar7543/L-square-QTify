import * as React from 'react';
import type { ToastObject as ToastObjectType } from '../useToastManager.js';
import { ToastRootContext } from './ToastRootContext.js';
export declare function useToastRoot(props: useToastRoot.Parameters): useToastRoot.ReturnValue;
export declare namespace useToastRoot {
    type ToastObject<Data extends object = any> = ToastObjectType<Data>;
    interface Parameters {
        toast: ToastObject<any>;
        swipeDirection?: 'up' | 'down' | 'left' | 'right' | ('up' | 'down' | 'left' | 'right')[];
    }
    interface ReturnValue extends ToastRootContext {
        rootRef: React.RefObject<HTMLDivElement | null>;
        renderScreenReaderContent: boolean;
        toast: ToastObject<any>;
        getRootProps: (externalProps?: any) => any;
        titleId: string | undefined;
        setTitleId: React.Dispatch<React.SetStateAction<string | undefined>>;
        descriptionId: string | undefined;
        swiping: boolean;
        swipeDirection: 'up' | 'down' | 'left' | 'right' | undefined;
    }
}
